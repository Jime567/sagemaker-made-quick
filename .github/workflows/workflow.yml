name: Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose Terraform action'
        required: true
        default: 'deploy'
        type: choice
        options:
          - deploy
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      cleanup_failed: ${{ steps.cleanup.outputs.cleanup_failed }}
      # <<<-- ADD THIS LINE -->>>
      terraform_action: ${{ steps.set_action_output.outputs.action }}
    defaults:
      run:
        working-directory: ./terraform
    env:
      TF_IN_AUTOMATION: "true"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1   # Replace with your region

      - name: Set Terraform Action Output
        id: set_action_output
        run: echo "action=${{ github.event.inputs.action }}" >> $GITHUB_OUTPUT

      - name: Save Terraform action to file
        run: echo "${{ github.event.inputs.action }}" > terraform_action.txt

      - name: Upload Terraform action artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform_action
          path: terraform_action.txt


      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Fmt (Deploy only)
        if: github.event.inputs.action == 'deploy'
        run: terraform fmt -check

      - name: Terraform Plan (Deploy)
        if: github.event.inputs.action == 'deploy'
        run: terraform plan -out=tfplan.binary

      - name: Terraform Apply (Deploy)
        if: github.event.inputs.action == 'deploy'
        run: terraform apply -auto-approve tfplan.binary

      # -------------------------------------------------------------------
      # SageMaker Cleanup — only runs before Terraform destroy
      # -------------------------------------------------------------------
      - name: Set up Python (Destroy only)
        if: github.event.inputs.action == 'destroy'
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install cleanup dependencies (Destroy only)
        if: github.event.inputs.action == 'destroy'
        run: |
          pip install boto3 sagemaker

      - name: Run SageMaker cleanup script (Destroy only)
        if: github.event.inputs.action == 'destroy'
        id: cleanup
        continue-on-error: true
        run: |
          echo "Running pre-destroy cleanup script..."
          if ! python -u ../clean-up-script.py; then
            echo "Cleanup failed, writing flag..."
            echo "cleanup_failed=true" >> $GITHUB_OUTPUT
          fi
        env:
          AWS_DEFAULT_REGION: us-east-1


      # -------------------------------------------------------------------
      # Terraform Destroy — runs after cleanup
      # -------------------------------------------------------------------
      - name: Terraform Destroy (Destroy only)
        if: github.event.inputs.action == 'destroy'
        run: terraform destroy -auto-approve
